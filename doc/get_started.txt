# Getting Stuff Done #
# Work with dev openshift
# Tail logs
rhc tail foodcheck
# SSH to the dev server
rhc ssh foodcheck
# Source virtenv so that it uses the correct python
source ~/python/virtenv/bin/activate
# Django management tools
cd app-root/repo/wsgi/foodcheck_proj/
./manage.py help
# Manage the DB
psql

# Update with latest changes from the official repository
## git pull doesn't like pulling from the non-master upstream
git fetch github
git merge github/master

# Push changes to development environment
git push openshift-dev

# Push changes to official repository
git push github
# Push changes to live
git push openshift-live

# Work with production
rhc account logout
rhc setup -l foodcheck@esplins.org
rhc ssh live
exit
rhc tail live


# Setup Dev Environment #
# Setup rhc
## Install ruby
sudo gem install rhc
rhc setup -l openshift-dev@esplins.org

# *Setup Dev Env from Existing Repo*
# Clone official github repo
git clone https://github.com/esplinr/foodcheck.git
cd foodcheck
git remote rename origin github
# Create dev openshift env based on official github repo
rhc app create foodcheck python-2.6 postgresql-9.2 --from-code https://github.com/esplinr/foodcheck.git --no-git -s
rhc ssh foodcheck
## Put the django admin password into ~/app-root/data/CREDENTIALS
touch ~/app-root/data/CLEAN_DB
exit
## Note the "Git remote" URL in the output
git remote add openshift-dev ssh://<Git remote URL>
git fetch openshift-dev
git branch --set-upstream master remotes/openshift-dev/master
git push openshift-dev
# Clean up
rhc ssh foodcheck
rm ~/app-root/data/CLEANDB
exit

# Connect dev repo to the live openshift
git remote add openshift-live ssh://51ef90015973ca501f0002ec@live-foodcheck.rhcloud.com/~/git/live.git/


# *First Repo--Only Needed Once*
# Create local git repository that is connected to the dev openshift env
rhc app create -a foodcheck -t python-2.6 -s
cd foodcheck
git remote rename origin openshift-dev
# Connect to the official github repo, and merge
git remote add github https://github.com/esplinr/foodcheck.git
git fetch github
git merge github/master
git status
## Edit and fix files
git commit
git push github
# Merge in from the django-example repo
git remote add django-example https://github.com/openshift/django-example.git
git fetch django-example
git merge django-example/master
## Edit and fix files
git commit
git push
## Rename django project from openshift to foodcheck_proj (grep every occurrence)
## Test

# Add PostgreSQL to Dev
rhc add-cartridge -c postgresql-9.2
## Put the django admin password into ~/app-root/data/CREDENTIALS
rhc ssh foodcheck
touch ~/app-root/data/CLEAN_DB
exit
git push openshift-dev
rhc ssh foodcheck
rm ~/app-root/data/CLEANDB
exit

# Setup the live openshift env
# * Use the instructions for changing accounts to live *
# * Then use the instructions for the Dev Env from existing repo *
# * but substitute account details and git branch openshift-live for dev *

# Add a DNS alias to the vhost on live
rhc alias add live foodcheck.us
rhc alias add live www.foodcheck.us

# # Connect dev repo to the live openshift
git remote add openshift-live ssh://51ef90015973ca501f0002ec@live-foodcheck.rhcloud.com/~/git/live.git/
